@model List<CleaningSupplies.Database.Models.Master>
@*@model List<CleaningSupplies.Database.Models.Usage>*@
@{
    /**/

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">

    .edit-mode {
    }

    .edit-usg {
    }

        .edit-usg display-mode {
        }

    .add-usg edit-mode {
    }

    .display-mode {
    }

    .remove-usg {
    }

    .webgrid-table {
        font-family: Arial,Helvetica,sans-serif;
        font-size: 14px;
        font-weight: normal;
        width: 900px;
        display: table;
        border-collapse: collapse;
        border: solid 1px #C5C5C5;
        background-color: white;
    }

        .webgrid-table td, th {
            border: 1px solid #C5C5C5;
            padding: 3px 7px 2px;
        }

    .webgrid-header, .webgrid-header a {
        background-color: #B6391E;
        color: white;
        text-align: left;
        text-decoration: none;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: #F5F5F5;
        padding: 3px 7px 2px;
    }

    .col1Width {
        width: 50px;
    }

    .col2Width {
        width: 200px;
    }

    .col3Width {
        width: 200px;
        text-align: center;
    }
</style>

<script type="text/javascript">
    $(function () {

        // edit mode hide
        $('.edit-mode').hide();

        //edit or cancel button click
        $('.edit-item, .cancel-item').on('click', function () {
            var tr = $(this).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
            // reset user input to 0
            tr.find('#Quantity_modified').val("0");
        });

        //add button click
        $('.add-qty').on('click', function () {
            var tr = $(this).parents('tr:first');
            var ID = tr.find("#ID").text();
            var Description = tr.find("#lblDescription").text();
            var QuantityInStock = tr.find("#lblQuantityInStock").text();
            var Quantity_modified = tr.find("#Quantity_modified").val();
            tr.find('.edit-mode, .display-mode').toggle();

            var UsageModel =
                {
                    "ID": ID,
                    "Description": Description,
                    //"QuantityInStock": QuantityInStock,
                    "Quantity_modified": Quantity_modified
                };
            $.ajax({
                url: '/Usage/Create/',
                data: JSON.stringify(UsageModel),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    alert(data);
                }
            });
            // reset user input to 0
            tr.find('#Quantity_modified').val("0");
        });

        // remove button click
        $('.remove-qty').on('click', function () {
            var tr = $(this).parents('tr:first');
            var ID = tr.find("#ID").text();
            var Description = tr.find("#lblDescription").text();
            var QuantityInStock = tr.find("#lblQuantityInStock").text();
            var Quantity_modified = tr.find("#Quantity_modified").val();
            tr.find('.edit-mode, .display-mode').toggle();

            var UsageModel =
                {
                    "ID": ID,
                    "Description": Description,
                    //"QuantityInStock": QuantityInStock,
                    "Quantity_modified": Quantity_modified
                };
            $.ajax({
                url: '/Usage/DecreaseQtyInStock/',
                data: JSON.stringify(UsageModel),
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    alert(data);
                }
            });
            // reset user input to 0
            tr.find('#Quantity_modified').val("0");
        });
    })
</script>

<h2>Usage</h2>


@{
    var grid = new WebGrid(Model, rowsPerPage: 8, canPage: true, canSort: true);
}


<div id="gridContent" style=" padding:20px; ">
    @grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        firstText: "<< First",
        previousText: " < Previous",
        nextText: "Next >",
        lastText: "Last >>",
        columns:
            grid.Columns(
            grid.Column("ID", "ID", format: @<text>
                <span><label id="ID">@item.ID</label></span>
                </text>, style: "col1Width", canSort: false),
            grid.Column("Description", "Description", format: @<text>
                <span><label id="lblDescription">@item.Description</label></span>
                </text>, style: "col2Width", canSort: true),
            grid.Column("QuantityInStock", "Qty In Stock", format: @<text>
                <span><label id="lblQuanityInStock">@item.QuantityInStock</label></span>
                </text>, style: "col2Width", canSort: false),
            grid.Column("Action", format: @<text>
                <input type="text" id="Quantity_modified" class="edit-mode" value="0" size="3" />
                <button class="edit-item display-mode">Edit</button>
                <button class="cancel-item edit-mode">Cancel</button>
                <button class="add-qty edit-mode">Add</button>
                <button class="remove-qty edit-mode">Remove</button>
                </text>, style: "col3Width", canSort: false)
    ))
</div>

